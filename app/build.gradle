plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs'
    id 'kotlin-parcelize'
    id "de.mannodermaus.android-junit5"
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}
apply from: "$rootDir/app/dependencies.gradle"

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.franzandel.dicodingjetpackprosubmission"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        all {
            buildConfigField 'String', "API_KEY" , '"4e5a1bf9e438166f9eb98a324b0a9499"'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
    sourceSets {
        main {
            resources {
                srcDirs 'src/main/resources', 'src/sharedTest/resources'
            }
        }
    }

    // Share code between test & androidTest sourceSets
    android.sourceSets {
        test {
            java.srcDirs += "$projectDir/src/sharedTest/java"
            resources.srcDirs += "$projectDir/src/sharedTest/resources"
        }

        androidTest {
            java.srcDirs += "$projectDir/src/sharedTest/java"
            resources.srcDirs += "$projectDir/src/sharedTest/resources"
        }
    }

    // Spek Configuration
    // Add Kotlin source directory to all source sets
    sourceSets.each {
        it.java.srcDirs += "src/$it.name/kotlin"
    }

    testOptions {
        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
            jacocoOptions {
                // here goes all jacoco config, for example
                html.enabled = true
                xml.enabled = false
                csv.enabled = false
            }
        }
        unitTests.all {
            testLogging.events = ["passed", "skipped", "failed"]
        }
    }
}